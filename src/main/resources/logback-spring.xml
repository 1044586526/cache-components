<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <springProperty scop="context" name="spring.application.name" source="spring.application.name" defaultValue=""/>
    <!-- 如果每个环境日志都输出在 当前位置下 可以用下面的-->
    <property name="log.path" value="./logs/${spring.application.name}" />
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} [%X{PID}] %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />
    <property name="FILE_LOG_PATTERN"
              value="${FILE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} [%X{PID}] %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />

    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
 
 	<!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!--输出到文件-->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.path}-%d{yyyy-MM-dd}-%i.log.zip</fileNamePattern>
            <!-- 单个日志文件最多1GB, 60天的日志周期，最大不能超过60GB -->
            <maxHistory>60</maxHistory>
            <totalSizeCap>60GB</totalSizeCap>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--单个文件达到最大1GB时会被压缩和切割 -->
                <maxFileSize>1GB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    
    <appender name="async_file" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>512</queueSize>
        <appender-ref ref="file"/>
    </appender>

    <logger name="org.springframework" level="ERROR" />
    <logger name="com.netflix" level="ERROR" />
    <logger name="org.apache" level="ERROR" />
    <logger name="io.netty" level="ERROR" />
    <logger name="com.codingapi" level="ERROR" />
	<logger name="org.quartz" level="INFO" />
	<logger name="com.ibatis" level="DEBUG" />
	<logger name="org.apache.rocketmq.spring" level="DEBUG" />
    <!-- sql 日志打印 -->
	<logger name="com.aspire.modules.sys.dao" level="DEBUG" />
	<logger name="com.aspire.modules.sys.cmd.dao" level="DEBUG" />
<!--	<logger name="com.aspire.nsmp.modules.pulldata.taiyue.dao" level="DEBUG" />-->
	<logger name="com.aspire.nsmp.core.domain" level="DEBUG" />
	<logger name="com.aspire.nsmp.core.domain.ck" level="DEBUG" />
	<logger name="com.aspire.nsmp.modules.asset.mapper" level="DEBUG" />

    <!-- 日志打印级别 -->
<!--     <root level="debug">
        <appender-ref ref="console" />
        <appender-ref ref="async_file" />
    </root> -->

    <!-- 根据环境设置不同日志打印，logback-spring.xml命名才生效 -->
    <springProfile name="dev">
        <root level="INFO">
            <appender-ref ref="console"/>
        </root>
    </springProfile>
    
    <springProfile name="prod">
        <root level="INFO">
            <appender-ref ref="async_file" />
        </root>
    </springProfile>
    
    <springProfile name="test">
        <root level="INFO">
            <appender-ref ref="console"/>
            <appender-ref ref="async_file" />
        </root>
    </springProfile>
 
</configuration>
